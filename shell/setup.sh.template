#!/bin/bash

export REPO_ROOT="<REPO_ROOT>"
export ZHH_K4H_RELEASE="<ZHH_K4H_RELEASE>"

source $REPO_ROOT/shell/common.sh

# Force cmake to use custom dependency versions instead of those in key4hep
# must match CMakeLists.txt in source directory
export Physsim_PATH="$Physsim"
export MarlinKinfit_ROOT="$MarlinKinfit"
export LD_LIBRARY_PATH="$Physsim/lib64:$LD_LIBRARY_PATH"
export CPATH=$(echo $CPATH | sed -e "s|/cvmfs/sw.hsf.org/key4hep/releases/2024-10-03/x86_64-almalinux9-gcc14.2.0-opt/physsim/0.5-433xdn/include/physsim|$Physsim/include|g")

function zhh_attach_marlin_dlls() {
    # TODO: no need for loop
    local libs=(
        "$REPO_ROOT/source/lib/libZHHProcessors.so"
    )

    for lib in "${libs[@]}"; do
        if [[ ! -f "$lib" ]]; then
            zhh_echo "+++ WARNING +++ Library <$(basename $lib)> not found at $lib."
            zhh_echo "    Make sure to compile it before you start Marlin. Continuing..."
        fi

        zhh_echo "Attaching library $(basename $lib)"
        export MARLIN_DLL="$lib":$MARLIN_DLL
    done

    # Cleanup conflicts with custom dependencies and key4hep stack
    local libs_old=(
        "/cvmfs/sw.hsf.org/key4hep/releases/2024-10-03/x86_64-almalinux9-gcc14.2.0-opt/lcfiplus/0.10.1-3azs6t/lib/libLCFIPlus.so"
        "/cvmfs/sw.hsf.org/key4hep/releases/2024-10-03/x86_64-almalinux9-gcc14.2.0-opt/marlinreco/1.36.1-ywnmqe/lib/libMarlinReco.so"
        "/cvmfs/sw.hsf.org/key4hep/releases/2024-10-03/x86_64-almalinux9-gcc14.2.0-opt/marlinmlflavortagging/0.1.0-2cepkq/lib/libMarlinMLFlavorTagging.so"
        "/cvmfs/sw.hsf.org/key4hep/releases/2024-10-03/x86_64-almalinux9-gcc14.2.0-opt/marlinkinfit/0.6.1-myr4kp/lib/libMarlinKinfit.so")
    local libs_new=("$LCFIPlus/build/lib/libLCFIPlus.so" "$MarlinReco/lib/libMarlinReco.so" "$MarlinMLFlavorTagging/lib/libMarlinMLFlavorTagging.so" "$MarlinKinfit/lib/libMarlinKinfit.so")

    for i in "${!libs_new[@]}"; do
        local lib="${libs_new[$i]}"
        if [[ ! -f "$lib" ]]; then
            zhh_echo "+++ WARNING +++ Library <$(basename $lib)> not found at $lib."
            zhh_echo "    Make sure to compile it before you start Marlin. Continuing..."
        fi

        zhh_echo "Attaching library $(basename $lib)"
        export MARLIN_DLL=$(echo "$MARLIN_DLL" | sed -e "s|${libs_old[$i]}:|${libs_new[$i]}:|g")
    done
}

if [[ ! -d "$REPO_ROOT/$ZHH_VENV_NAME" || ! -f "$REPO_ROOT/$ZHH_VENV_NAME/bin/activate" ]]; then
    zhh_echo "Warning: <$ZHH_VENV_NAME> does not seem to point to a valid venv."
    zhh_echo "    Job submissions via law may fail. Consider running source install.sh"
fi

if [[ ! -d "$MarlinMLFlavorTagging" || ! -d "$LCFIPlus" || ! -d "$LCFIPlusConfig" || ! -d "$LCIO" || ! -d "${ILD_CONFIG_DIR}" ]]; then
    zhh_echo "Error: MarlinMLFlavorTagging, LCFIPlus, LCFIPlusConfig, LCIO and ILD_CONFIG_DIR must be set and point to valid directories."
    zhh_echo "    Use --install to download and/or compile them here. Aborting."
    return 1
fi

if [[ $MARLIN_DLL != *"libZHHProcessors"* ]]; then
    zhh_attach_marlin_dlls
fi

function MarlinZHH() {
    local steering_file
    if [[ -f "$1" ]]; then
        steering_file=$1
        shift
    else
        steering_file="$REPO_ROOT/scripts/prod.xml"
    fi

    Marlin $steering_file --constant.ILDConfigDir="$ILD_CONFIG_DIR" --constant.ZHH_REPO_ROOT="$REPO_ROOT" "$@"
}
function zhhvenv() {
    source $REPO_ROOT/$ZHH_VENV_NAME/bin/activate
}

# Helpful for running batch jobs
source $REPO_ROOT/shell/is_json_readable.sh
source $REPO_ROOT/shell/is_root_readable.sh

# Define a zhh_post_setup function in .env.sh to finalize the environment
# This is useful e.g. if you need to link to a custom version of MarlinReco etc 
if typeset -f zhh_post_setup > /dev/null; then
    zhh_post_setup
fi

export ZHH_SETUP=1
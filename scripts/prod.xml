<?xml version="1.0" encoding="us-ascii"?>
    <marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">

    <constants>
        <!-- These variables must be provided by the call to Marlin
        The MarlinZHH alias in setup.sh populates these variables with
        the correct values
        -->
        <constant name="ILDConfigDir" value="" />
        <constant name="ZHH_REPO_ROOT" value="." />

        <constant name="PFOsWithoutOverlayCollection" value="PFOsWithoutOverlayCheated" />

        <!-- Use these variables to study specific channels only
        In the job submission script, all channels are run
        -->
        <constant name="Runllbbbb" value="true" />
        <constant name="Runvvbbbb" value="false" />
        <constant name="Runqqbbbb" value="false" />
        <constant name="RunTruthRecoComparison" value="false" />
        <constant name="KinFitSignature" value="llbbbb" />

        <!-- These must be chosen depending on fast/full simulation options -->
        <constant name="IsFastSim" value="true" />
        <constant name="errorflowconfusion" value="true" />

        <!-- These variables should be constant -->
        <constant name="LCFIPlusML_ONNX" value="${ZHH_REPO_ROOT}/dependencies/LCFIPlusConfig/onnx/ilc_nnqq_sgvnew_3cat_cut/ilc_nnqq_sgvnew_3cat_cut.onnx" />
        <constant name="LCFIPlusML_JSON" value="${ZHH_REPO_ROOT}/dependencies/LCFIPlusConfig/onnx/ilc_nnqq_sgvnew_3cat_cut/preprocess.json" />

        <constant name="lcgeo_DIR" value="/cvmfs/sw.hsf.org/key4hep/releases/2024-03-10/x86_64-centos7-gcc12.2.0-opt/k4geo/0.20-e42drs/share/k4geo" />
        <constant name="DetectorModel" value="ILD_l5_o1_v02" />
        <constant name="CompactFile" value="${lcgeo_DIR}/ILD/compact/${DetectorModel}/${DetectorModel}.xml" />
        <constant name="OutputDirectory" value="." />
        <constant name="OutputBaseName" value="zhh" />
        <constant name="OutputRootFile" value="${OutputBaseName}.root" />
        <constant name="NumberOfHiggs" value="2" />
        <constant name="MCParticleCollectionName" value="MCParticlesSkimmed" />
        <constant name="CMSEnergy" value="550." />
	    <constant name="ISRPzMax" value="125.6" />
        <constant name="Verbosity" value="SILENT" />
    </constants>

    <execute>
        <processor name="MyAIDAProcessor" />
        <processor name="InitDD4hep" />
        <processor name="MyStatusmonitor" />

        <!-- Reconstruction -->
        <group name="prodRecoCorrections" />

        <!-- when running on fast sim samples, apply the CovMatSwitch fix to correct extremely large errors from tracks (use cluster error then) -->
        <if condition="${IsFastSim}">
            <group name="prodRecoFastSim" />
        </if>

        <group name="prodRecoMain" />

        <!-- Analysis -->
        <group name="prodAnalysisAll" />

        <if condition="${Runllbbbb}">
            <group name="prodAnalysisLL" />
        </if>
        <if condition="${Runvvbbbb}">
            <group name="prodAnalysisVV" />
        </if>
        <if condition="${Runqqbbbb}">
            <group name="prodAnalysisQQ" />
        </if>

        <processor name="MyLCIOOutputProcessor" />
    </execute>

    <global>
        <parameter name="LCIOInputFiles">
            /pnfs/desy.de/ilc/prod/ilc/mc-2020/ild/dst-merged/500-TDR_ws/hh/ILD_l5_o1_v02/v02-02-03/00015739/000/rv02-02-03.sv02-02-03.mILD_l5_o1_v02.E500-TDR_ws.I403001.Pe2e2hh.eL.pR.n000.d_dstm_15739_0.slcio
            <!--
            /pnfs/desy.de/ilc/prod/ilc/ild/copy/dst-merged/500-TDR_ws/2f_Z_hadronic/ILD_l5_o1_v02/v02-00-01/rv02-00-01.sv02-00-01.mILD_l5_o1_v02.E500-TDR_ws.I250114.P2f_z_h.eL.pR.n001.d_dstm_10410_1.slcio
            /pnfs/desy.de/ilc/prod/ilc/ild/copy/dst-merged/500-TDR_ws/6fVVWW/ILD_l5_o1_v02/v02-00-01/rv02-00-01.sv02-00-01.mILD_l5_o1_v02.E500-TDR_ws.I108596.Pvvveev.eL.pR.n001.d_dstm_10354_0.slcio 
            /pnfs/desy.de/ilc/prod/ilc/ild/copy/dst-merged/500-TDR_ws/6f_ttbar/ILD_l5_o1_v02/v02-00-01/rv02-00-01.sv02-00-01.mILD_l5_o1_v02.E500-TDR_ws.I108677.Pyyuyyu.eL.pR.n007.d_dstm_10433_15.slcio
            -->
        </parameter>
        <!-- limit the number of processed records (run+evt): -->
        <!--parameter name="MaxRecordNumber" value="0" /to process all events--> 
        <!--parameter name="MaxRecordNumber" value="1000" /to process 1000 events--> 
        <parameter name="MaxRecordNumber" value="10"/>
        <parameter name="SkipNEvents" value="0" />
        <parameter name="SupressCheck" value="false" />
        <parameter name="Verbosity" options="DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT">SILENT</parameter>
        <parameter name="RandomSeed" value="1234567890" />
        <parameter name="OutputSteeringFile" value="" />
        <parameter name="AllowToModifyEvent" value="true" />
        <!-- optionally limit the collections that are read from the input file: -->
        <!--parameter name="LCIOReadCollectionNames">MCParticle PandoraPFOs</parameter-->
    </global>

    <processor name="MyStatusmonitor" type="Statusmonitor">
        <!--Statusmonitor prints out information on running Marlin Job: Prints number of runs run and current number of the event. Counting is sequential and not the run or event ID.-->
        <!--Print the event number every N events-->
        <parameter name="HowOften" type="int">1 </parameter>
        <parameter name="Verbosity" type="string">MESSAGE</parameter>
    </processor>

    <processor name="MyAIDAProcessor" type="AIDAProcessor">
        <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms,clouds and tuples. Needs to be the first ActiveProcessor-->
        <!-- compression of output file 0: false >0: true (default) -->
        <parameter name="Compress" type="int">1</parameter>
        <!-- filename without extension-->
        <parameter name="FileName" type="string">${OutputDirectory}/${OutputBaseName}_AIDA</parameter>
        <!-- type of output file root (default) or xml )-->
        <parameter name="FileType" type="string">root</parameter>
        <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
        <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
    </processor>

    <processor name="InitDD4hep" type="InitializeDD4hep">
        <!--InitializeDD4hep reads a compact xml file and initializes the DD4hep::LCDD object-->
        <!--Name of the DD4hep compact xml file to load-->
        <parameter name="DD4hepXMLFile" type="string">${CompactFile}</parameter>
        <parameter name="Verbosity" type="string">SILENT</parameter>
    </processor>

    <include ref="${ZHH_REPO_ROOT}/scripts/prod_analysis.xml" />
    <include ref="${ZHH_REPO_ROOT}/scripts/prod_reco.xml" />

    <processor name="MyLCIOOutputProcessor" type="LCIOOutputProcessor">
        <!--Writes the current event to the specified LCIO outputfile. Needs to be the last ActiveProcessor.-->
        <!--drops the named collections from the event-->
        <parameter name="DropCollectionNames" type="StringVec"> BuildUpVertex BuildUpVertex_RP BuildUpVertex_V0 BuildUpVertex_V0_RP GammaGammaCandidateEtaPrimes GammaGammaCandidateEtas GammaGammaCandidatePi0s MCTruthMarlinTrkTracksLink MCTruthClusterLink MarlinTrkTracksMCTruthLink ${PFOsWithoutOverlayCollection} PandoraPFO_updatedNeutralPFOs PrimaryVertex PrimaryVertex_RP RefinedJets_rel RefinedJets_vtx RefinedJets_vtx_RP RefinedVertex_RP V0RecoParticles V0Vertices VertexJets DistilledPFOs GammaGammaParticles DurhamJetsPFOs Durham_2JetsPFOs </parameter>
        <!--drops all collections of the given type from the event-->
        <!--parameter name="DropCollectionTypes" type="StringVec">SimTrackerHit SimCalorimeterHit  </parameter-->
        <!-- write complete objects in subset collections to the file (i.e. ignore subset flag)-->
        <!--parameter name="FullSubsetCollections" type="StringVec">${MCParticleCollectionName}</parameter-->
        <!--force keep of the named collections - overrules DropCollectionTypes (and DropCollectionNames)-->
        <parameter name="KeepCollectionNames" type="StringVec"> ISOMuons ISOElectrons ISOTaus recoNeutrinos4 recoNeutrinos6 SemiLeptonicDecay_RP SemiLeptonicDecayVertex PandoraClusters PFOsMinusISOMuons PandoraPFOsWithoutLepPair MarlinTrkTracks MarlinTrkTracksKaon MarlinTrkTracksProton JetSLDLink SLDJetLink mcNurecoNuLink recoNumcNuLink NuSLDLink SLDNuLink PandoraPFOs ${PFOsWithoutOverlayCollection} IsolatedLeptons ISOLeptons PandoraPFOsWithoutLepPair PandoraPFOsWithoutIsoLep RefinedJets2 RefinedJets4 RefinedJets5 RefinedJets6 TrueJets FinalColourNeutrals InitialColourNeutrals TrueJetPFOLink TrueJetMCParticleLink FinalElementonLink InitialElementonLink FinalColourNeutralLink InitialColourNeutralLink HdecayMode </parameter>
        <!-- name of output file -->
        <parameter name="LCIOOutputFile" type="string">${OutputDirectory}/${OutputBaseName}.slcio</parameter>
        <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
        <parameter name="LCIOWriteMode" type="string">WRITE_NEW</parameter>
        <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
        <!--parameter name="SplitFileSizekB" type="int">1992294 </parameter-->
        <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
        <parameter name="Verbosity" type="string">DEBUG</parameter>
    </processor>
</marlin>
